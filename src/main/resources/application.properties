server.port=8075

kafka.bootstrap.servers=r0.kafka.rbc-hackathon.aws.confluent.cloud:9092,r0.kafka.rbc-hackathon.aws.confluent.cloud:9093,r0.kafka.rbc-hackathon.aws.confluent.cloud:9094
schema.registry.url=http://ec2-35-182-31-180.ca-central-1.compute.amazonaws.com:8081

group.id=testgroup1

# Create this topic using the following ccloud command: ccloud topic create lojo-test-cities-1 --partitions 1
topic.name.cities=CARMELLA-Cities
file.path.cities=data/cities.csv

# Create this topic using the following ccloud command: ccloud topic create lojo-test-customers-1 --partitions 1
topic.name.customers=CARMELLA-Customers
file.path.customers=data/customers.csv

# Create this topic using the following ccloud command: ccloud topic create lojo-test-transactions-1 --partitions 1
topic.name.transactions=CARMELLA-Transactions
file.path.transactions=data/transactions.csv

enable.auto.commit=false
session.timeout.ms=10000

sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${kafka.username}" password="${kafka.password}"
sasl.mechanism=PLAIN

security.protocol=SASL_SSL

logging.level.org.apache.kafka=INFO

# !!! --- These 3 parameters need to be set before you can run this --- !! #

#fill this in with the api key/username value you'll receive from the cloud team
kafka.username=

#fill this in with the api secret/password value you'll receive from the cloud team
kafka.password=

#fill this in with an absolute path to a writable directory on your machine.  The code uses this to create a jaas file
# used to authenticate.  Since the path to the jaas file needs to be an absolute path this location also needs to be absolute.
writable.dir=

interceptor.classes=io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
confluent.monitoring.interceptor.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${kafka.username}" password="${kafka.password}"
confluent.monitoring.interceptor.sasl.mechanism=PLAIN
confluent.monitoring.interceptor.security.protocol=SASL_SSL
